#!/usr/bin/env python

import os
import sys
import logging
from netcontrol.config import Config
from netcontrol.standalone import make_log
from netcontrol.plugmgr import PluginLoader, RepositoryManager
from netcontrol.utils import detect_platform

def main():
    if len(sys.argv) < 2:
        print 'Specify command'
        sys.exit(1)

    if os.path.isfile('/etc/netcontrol/netcontrol.conf'):
        config_file = '/etc/netcontrol/netcontrol.conf'
    elif os.path.isfile(os.path.join(sys.path[0], 'netcontrol.conf')):
        config_file = os.path.join(sys.path[0], 'netcontrol.conf')

    log = make_log(debug=False)

    print 'Loading plugins'

    config = Config()
    config.load(config_file)
    PluginLoader.initialize(log, config.get('netcontrol', 'plugins'), detect_platform())
    PluginLoader.load_plugins()

    mgr = RepositoryManager(config)

    if sys.argv[1] == 'list':
        for i in mgr.installed:
            print_one(i)
    if sys.argv[1] == 'avail':
        for i in mgr.available:
            print_one(i)
    if sys.argv[1] == 'remove':
        for pkg in sys.argv[2:]:
            print 'Removing', pkg
            mgr.remove(pkg)
        print 'Done'
    if sys.argv[1] == 'get':
        for pkg in sys.argv[2:]:
            print 'Downloading', pkg
            mgr.install(pkg)
        print 'Done'
    if sys.argv[1] == 'update':
        print 'Downloading plugin list'
	# Changed here:
        # mgr.update_list()
        print 'Done'
    if sys.argv[1] == 'upgrade':
        print 'Downloading plugin list'
	#Changed here:
	#mgr.update_list()
        #print 'Upgrading Netcontrol plugins'
        #for pkg in mgr.available:
        #    for p in mgr.installed:
        #        if pkg.id == p.id and pkg.version != p.version:
        #            print 'Downloading', pkg.id
        #            mgr.install(pkg.id)
        print 'Done'

def print_one(i):
    st = 'i..' if i.installed else '...'
    if i.problem:
        st = '..X'
    print ' %s\t%s\t%s' % (st, i.version, i.id)
    if i.problem:
        print '\t\t\t\t' + str(i.problem)


main()
